global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'docker-compose'
    region: 'local'

rule_files:
  - "rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets: ['alertmanager:9093']

scrape_configs:
  # Scrape Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Scrape Loki metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    scrape_interval: 30s
    metrics_path: /metrics

  # Scrape Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: /metrics

  # Scrape Alertmanager metrics
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s
    metrics_path: /metrics

  # External targets from GKE (replace with your actual endpoints)
  - job_name: 'gke-otel-collector'
    static_configs:
      - targets: ['YOUR_GKE_OTEL_COLLECTOR_EXTERNAL_IP:8888']
    scrape_interval: 30s
    metrics_path: /metrics

  # Kubernetes API server metrics (if exposed externally)
  - job_name: 'kubernetes-apiservers'
    static_configs:
      - targets: ['YOUR_GKE_API_SERVER_EXTERNAL_IP:6443']
    scheme: https
    tls_config:
      insecure_skip_verify: true
    bearer_token_file: /path/to/token  # You'll need to provide this

  # Node exporter metrics from GKE nodes (if exposed)
  - job_name: 'kubernetes-nodes'
    static_configs:
      - targets: 
        - 'YOUR_NODE_1_EXTERNAL_IP:9100'
        - 'YOUR_NODE_2_EXTERNAL_IP:9100'
    scrape_interval: 30s

remote_write:
  # Optional: Write to another Prometheus instance
  # - url: "http://remote-prometheus:9090/api/v1/write"